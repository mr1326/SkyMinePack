name: Resource Pack
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Checkout the code from the repository
    - name: Checkout code from main repository
      uses: actions/checkout@v2

    # Remove old resource pack zip files (cleanup)
    - name: Remove old resource pack zip
      run: |
        rm -f SkyMineRP-*.zip  # Remove any previous resource pack zips
        echo "Old resource pack zip files removed."

    # Extract the version number from pack.mcmeta
    - name: Extract version from pack.mcmeta
      id: version
      run: |
        # Read the version from pack.mcmeta
        description=$(cat pack.mcmeta)

        # Use regex to extract the version number (e.g., 'V 6.0.1' -> 6.0.1)
        version=$(echo "$description" | grep -oP 'V \d+\.\d+\.\d+' | awk '{print $2}')

        # Validate version extraction
        if [ -z "$version" ]; then
          echo "Error: Version could not be extracted from pack.mcmeta."
          exit 1
        fi

        # Save the version for use in later steps
        echo "VERSION=$version" >> $GITHUB_ENV
        echo "Extracted version: $version"

    # Create the resource pack zip file with assets in the root
    - name: Create resource pack zip
      run: |
        zip -r SkyMineRP-latest.zip . -x ".git/*" "node_modules/*" "*.editorconfig"
        echo "Resource pack zip created: SkyMineRP-latest.zip"

    # Create and push a Git tag for the version
    - name: Create and push Git tag
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag v${{ env.VERSION }}  # Create a new tag (e.g., v6.5.0)
        git push origin v${{ env.VERSION }}  # Push the tag to GitHub

    # Create GitHub Release and upload ZIP file
    - name: Create GitHub release and upload ZIP
      uses: softprops/action-gh-release@v1
      with:
        files: SkyMineRP-latest.zip  # Upload the ZIP as the release asset
        name: "SkyMineRP v${{ env.VERSION }}"  # Name the release
        body: "New resource pack version v${{ env.VERSION }}"  # Description for the release
        draft: false  # Make the release publicly available
        prerelease: false  # Mark as stable release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required for authentication
