name: Create and Upload Release ZIP

on:
  push:
    branches:
      - main  # Trigger workflow when a commit is pushed to the main branch

jobs:
  create-zip-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Extract version from pack.mcmeta
      id: extract_version
      run: |
        if [[ -f pack.mcmeta ]]; then
          description=$(cat pack.mcmeta)
          
          # Remove color codes (unicode like \u00a76, \u00a74)
          cleaned_description=$(echo "$description" | sed 's/\\u[0-9A-Fa-f]\{4\}//g')

          # Extract version number (in the format x.x.x)
          version=$(echo "$cleaned_description" | grep -oP '\d+\.\d+\.\d+')

          if [[ -z "$version" ]]; then
            echo "Version extraction failed! Defaulting to unknown-version."
            version="unknown-version"
          fi
        else
          echo "pack.mcmeta not found! Defaulting to unknown-version."
          version="unknown-version"
        fi
        echo "Extracted version: $version"
        echo "version=$version" >> $GITHUB_ENV  # This will set 'version' as an environment variable

    - name: Debug version
      run: |
        echo "Version is: ${{ env.version }}"  # Ensure the 'version' environment variable is available

    - name: Set Git identity
      run: |
        git config --global user.email "${{ secrets.GIT_EMAIL }}"
        git config --global user.name "${{ secrets.GIT_USERNAME }}"

    - name: Create Tag
      run: |
        git tag -a "v${{ env.version }}" -m "Release v${{ env.version }}"
        git push origin "v${{ env.version }}"

    - name: Create ZIP file
      run: |
        # Exclude GitHub-specific files and directories
        zip -r release-${{ env.version }}.zip . -x '*.git*' '*.github*'

    - name: Calculate SHA1 hash of ZIP file
      id: calculate_sha1
      run: |
        sha1sum release-${{ env.version }}.zip | awk '{print $1}' > sha1.txt
        sha1=$(cat sha1.txt)
        echo "SHA1 hash: $sha1"
        echo "sha1=$sha1" >> $GITHUB_ENV

    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.version }}  # Use the version extracted earlier as the tag name
        release_name: Release ${{ env.version }}
        draft: false
        prerelease: false
        body: |
          Release version: ${{ env.version }}
          SHA1 hash of ZIP: ${{ env.sha1 }}

    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-${{ env.version }}.zip
        asset_name: release-${{ env.version }}.zip
        asset_content_type: application/zip
