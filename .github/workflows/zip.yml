name: Resource Pack
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Checkout the code from the repository
    - name: Checkout code from main repo
      uses: actions/checkout@v2

    # Remove old zip file from main repo if it exists (automated cleanup)
    - name: Remove old resource pack zip from main repo
      run: |
        rm -f resourcepack-*.zip  # Remove any previous version of the resource pack zip
        echo "Old .zip files removed from main repository"

    # Extract the version number from your resource pack file (or another file where version is stored)
    - name: Extract version from resource pack description
      id: version
      run: |
        # Read the description from the resource pack file (or a specific file where version is stored)
        description=$(cat pack.mcmeta)
        
        # Use regex to extract the version number (e.g., 'V 6.0.1')
        version=$(echo "$description" | grep -oP 'V \d+\.\d+\.\d+' | awk '{print $2}')
        
        # Set the extracted version to an environment variable for later steps
        echo "VERSION=$version" >> $GITHUB_ENV
        echo "Extracted version: $version"

    # Create Git tag (IMPORTANT! This is the missing part that was causing the error)
    - name: Create and Push Git Tag
      run: |
        git tag v${{ env.VERSION }}  # Create a tag with version number (e.g., v6.1.0)
        git push origin v${{ env.VERSION }}  # Push the tag to GitHub

    # Create GitHub Release and Upload ZIP File
    - name: Create GitHub Release and Upload ZIP File
      uses: softprops/action-gh-release@v1
      with:
        files: SkyMineRP-${{ env.VERSION }}.zip  # Attach the .zip file to the release
        name: "SkyMineRP-${{ env.VERSION }}"  # Set release name to SkyMineRP-version
        body: " "  # Empty description (just a space to fulfill the requirement)
        draft: false  # Set to false to make the release publicly available
        prerelease: false  # Set to true if this is a prerelease, false for regular releases
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This is automatically available for GitHub Actions workflows
