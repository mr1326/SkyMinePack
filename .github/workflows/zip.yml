name: Create and Upload Release ZIP

on:
  push:
    tags:
      - '*' # Trigger workflow when a tag is pushed

jobs:
  create-zip-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Extract version
      id: extract_version
      run: |
        if [[ -f pack.mcmeta ]]; then
          version=$(cat pack.mcmeta)
          version=$(echo "$version" | grep -oP 'V \d+\.\d+\.\d+' | awk '{print $2}')
          if [[ -z "$version" ]]; then
            echo "Version extraction failed! Defaulting to unknown-version."
            version="unknown-version"
          fi
        else
          echo "pack.mcmeta not found! Defaulting to unknown-version."
          version="unknown-version"
        fi
        echo "Extracted version: $version"
        echo "version=$version" >> $GITHUB_ENV

    - name: Debug version
      run: |
        echo "Version is: ${{ env.version }}"

    - name: Create ZIP file
      run: |
        # Exclude GitHub-specific files and directories
        zip -r release-${{ env.version }}.zip . -x '*.git*' '*.github*'

    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }} # Use the tag name as release reference
        release_name: Release ${{ env.version }}
        draft: false
        prerelease: false

    - name: Upload ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-${{ env.version }}.zip
        asset_name: release-${{ env.version }}.zip
        asset_content_type: application/zip