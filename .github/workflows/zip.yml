name: Create Release with Static ZIP and Versioned Name

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Extract Version from pack.mcmeta
      id: extract_version
      run: |
        description=$(cat pack.mcmeta)
        version=$(echo "$description" | grep -oP 'V \d+\.\d+\.\d+' | awk '{print $2}')
        if [ -z "$version" ]; then
          echo "Error: Version could not be extracted from pack.mcmeta."
          exit 1
        fi
        echo "VERSION=$version" >> $GITHUB_ENV
        echo "::set-output name=version::$version"

    - name: Archive Release with Exclusions
      uses: thedoctor0/zip-release@master
      with:
        filename: 'temp.zip'  # Temporary file name for the ZIP
        exclusions: '*.git* /*node_modules/* .editorconfig'

    - name: Rename ZIP to latest.zip
      run: mv temp.zip latest.zip

    - name: Generate SHA-1 Hash for the ZIP
      id: generate_sha1
      run: |
        SHA1=$(sha1sum latest.zip | awk '{print $1}')
        echo "SHA1=$SHA1" >> $GITHUB_ENV
        echo "::set-output name=sha1::$SHA1"

    - name: Create GitHub Release
      id: create_release
      run: |
        VERSION=${{ steps.extract_version.outputs.version }}
        SHA1=${{ steps.generate_sha1.outputs.sha1 }}
        RELEASE_NAME="v$VERSION"  # Release name only contains the version
        BODY="Automated release for version v$VERSION\n\nSHA-1 Hash:\n$SHA1"

        # Create a GitHub release
        response=$(curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "{
                \"tag_name\": \"v$VERSION\",
                \"release_name\": \"$RELEASE_NAME\",
                \"body\": \"$BODY\",
                \"draft\": false,
                \"prerelease\": false
              }" \
          https://api.github.com/repos/${{ github.repository }}/releases)

        upload_url=$(echo "$response" | jq -r '.upload_url' | sed 's/{?name,label}//')
        echo "::set-output name=upload_url::$upload_url"

    - name: Upload latest.zip to GitHub Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: latest.zip  # Ensures static file name
        asset_name: latest.zip  # Static name for the asset
        asset_content_type: application/zip
